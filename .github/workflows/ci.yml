# GitHub Actions workflow for Python package testing and linting
# Follows current best practices as of 2024-2025
name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Set default permissions (security best practice)
permissions:
  contents: read

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5  # Updated to v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'  # Cache pip dependencies for faster builds
        
    - name: Display Python version
      run: python -c "import sys; print(f'Python {sys.version}')"
      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install ruff pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        
    - name: Lint with Ruff (modern replacement for flake8)
      run: |
        # Check for syntax errors and undefined names
        ruff check --select=E9,F63,F7,F82 --output-format=github .
        # Full linting with GitHub-friendly output
        ruff check --output-format=github .
        
    - name: Check code formatting with Ruff
      run: |
        ruff format --check --diff .
      continue-on-error: true  # Don't fail on formatting issues, just warn
      
    - name: Test with pytest
      run: |
        pytest --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml \
               --cov=. --cov-report=xml --cov-report=html --cov-report=term-missing
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()  # Upload results even if tests fail
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          junit/test-results-${{ matrix.python-version }}.xml
          htmlcov/
          coverage.xml
        retention-days: 30
        
  # Optional: Security scanning job
  security:
    name: Security scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only run on push, not PR
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
        cache: 'pip'
        
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        python -m pip install safety bandit
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Run safety check for known vulnerabilities
      run: |
        safety check --json --output safety-report.json || true
        
    - name: Run bandit security linter
      run: |
        bandit -r . -f json -o bandit-report.json || true
        
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json
        retention-days: 30

  # Optional: Build check job (useful for packages)
  build:
    name: Build package
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only run on push, not PR
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
        cache: 'pip'
        
    - name: Install build tools
      run: |
        python -m pip install --upgrade pip build
        
    - name: Build package
      run: |
        python -m build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-packages
        path: dist/
        retention-days: 7
