# GitHub Actions workflow for Python application testing
name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install ruff pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        
    - name: Lint with Ruff
      run: |
        # Check for syntax errors and undefined names
        ruff check --select=E9,F63,F7,F82 --output-format=github .
        # Full linting
        ruff check --output-format=github .
        
    - name: Check formatting with Ruff
      run: |
        ruff format --check --diff .
      continue-on-error: true
      
    - name: Test with pytest
      run: |
        pytest --doctest-modules --cov=. --cov-report=term-missing
        
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: matrix.python-version == '3.11'  # Upload only once
      with:
        name: coverage-report
        path: .coverage
        retention-days: 7
