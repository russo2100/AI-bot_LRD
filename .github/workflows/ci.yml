# GitHub Actions workflow for Python application: linting, testing, formatting, and coverage

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  lint-and-test:
    name: Lint, Format & Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Lint with Ruff
        run: |
          ruff check --select=E9,F63,F7,F82 --output-format=github .
          ruff check --output-format=github .

      - name: Check formatting with Black
        run: |
          black --check .
        continue-on-error: true

      - name: Test with pytest and coverage
        run: |
          pytest --doctest-modules --cov=. --cov-report=term-missing

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: matrix.python-version == '3.11'
        with:
          name: coverage-report
          path: .coverage
          retention-days: 7

  # Optional: Static type checks
  type-check:
    name: Static Type Check (mypy)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'

      - name: Install mypy and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mypy
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run mypy
        run: |
          mypy .
